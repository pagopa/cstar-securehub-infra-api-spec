openapi: 3.0.1
info:
  title: IDPAY ITN Welfare Portal Merchant API
  description: IDPAY ITN Welfare Portal Merchant
  version: 1.0.1
  contact:
    name: API Support
    email: support@example.com
    url: https://example.com/support
servers:
  - url: "https://api-io.dev.cstar.pagopa.it/idpay-itn/merchant/portal"
    x-internal: false

tags:
  - name: point-of-sales
    description: Operations on merchant points of sale
  - name: point-of-sale-transactions
    description: Operations on transactions for a specific point of sale
  - name: merchant-initiatives
    description: Operations to list merchant initiatives
  - name: merchant-initiative-statistics
    description: Statistics for merchant initiatives
  - name: merchant-transactions
    description: Operations on merchant transactions
  - name: transaction
    description: Operations related to a single transaction
  - name: merchant-detail
    description: Retrieve and update merchant details
  - name: reported-user
    description: Create, search, and delete reported users

paths:
  /{merchantId}/point-of-sales:
    put:
      tags:
        - point-of-sales
      summary: Save or update a list of points of sale
      description: Save or update a list of points of sale fo the specified merchant
      operationId: putPointOfSales
      parameters:
        - name: merchantId
          in: path
          description: The merchant ID
          required: true
          schema:
            type: string
            maxLength: 64
            pattern: '.*'
      requestBody:
        description: List of points of sale to save or update
        required: true
        content:
          application/json:
            schema:
              type: array
              maxItems: 1000
              items:
                $ref: "#/components/schemas/PointOfSaleDTO"
      responses:
        "204":
          description: No Content - Successfully saved or updated
          headers:
            Access-Control-Allow-Origin: { $ref: '#/components/headers/Access-Control-Allow-Origin' }
            X-RateLimit-Limit: { $ref: '#/components/headers/X-RateLimit-Limit' }
            X-RateLimit-Remaining: { $ref: '#/components/headers/X-RateLimit-Remaining' }
            X-RateLimit-Reset: { $ref: '#/components/headers/X-RateLimit-Reset' }
        "400":
          description: Bad request - Invalid input data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationErrorDTO"
          headers:
            Access-Control-Allow-Origin: { $ref: '#/components/headers/Access-Control-Allow-Origin' }
            X-RateLimit-Limit: { $ref: '#/components/headers/X-RateLimit-Limit' }
            X-RateLimit-Remaining: { $ref: '#/components/headers/X-RateLimit-Remaining' }
            X-RateLimit-Reset: { $ref: '#/components/headers/X-RateLimit-Reset' }
        "401":
          description: Unauthorized - Authentication failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PointOfSaleErrorDTO"
          headers:
            Access-Control-Allow-Origin: { $ref: '#/components/headers/Access-Control-Allow-Origin' }
            X-RateLimit-Limit: { $ref: '#/components/headers/X-RateLimit-Limit' }
            X-RateLimit-Remaining: { $ref: '#/components/headers/X-RateLimit-Remaining' }
            X-RateLimit-Reset: { $ref: '#/components/headers/X-RateLimit-Reset' }
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PointOfSaleErrorDTO"
              example:
                code: POINT_OF_SALE_NOT_FOUND
                message: Point of sale with id 123 not found.
          headers:
            Access-Control-Allow-Origin: { $ref: '#/components/headers/Access-Control-Allow-Origin' }
            X-RateLimit-Limit: { $ref: '#/components/headers/X-RateLimit-Limit' }
            X-RateLimit-Remaining: { $ref: '#/components/headers/X-RateLimit-Remaining' }
            X-RateLimit-Reset: { $ref: '#/components/headers/X-RateLimit-Reset' }
        "429":
          description: Too many Request - Rate limit exceeded
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PointOfSaleErrorDTO"
              example:
                code: POINT_OF_SALE_TOO_MANY_REQUESTS
                message: Too many requests
          headers:
            Access-Control-Allow-Origin: { $ref: '#/components/headers/Access-Control-Allow-Origin' }
            Retry-After: { $ref: '#/components/headers/Retry-After' }
            X-RateLimit-Limit: { $ref: '#/components/headers/X-RateLimit-Limit' }
            X-RateLimit-Remaining: { $ref: '#/components/headers/X-RateLimit-Remaining' }
            X-RateLimit-Reset: { $ref: '#/components/headers/X-RateLimit-Reset' }
        "500":
          description: Internal Server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PointOfSaleErrorDTO"
              example:
                code: POINT_OF_SALE_GENERIC_ERROR
                message: An internal error occurred
          headers:
            Access-Control-Allow-Origin: { $ref: '#/components/headers/Access-Control-Allow-Origin' }
    get:
      tags:
        - point-of-sales
      summary: Retrieve a list of points of sale
      description: "Returns a paginated list of points of sale for the specified merchant, with optional filters."
      operationId: getPointOfSales
      parameters:
        - name: merchantId
          in: path
          description: The merchant ID
          required: true
          schema:
            type: string
            maxLength: 64
            pattern: '.*'
        - name: type
          in: query
          description: Filter by point of sale type
          required: false
          schema:
            type: string
            enum: [PHYSICAL, ONLINE]
        - name: city
          in: query
          required: false
          schema:
            type: string
            maxLength: 128
            pattern: '.*'
        - name: address
          in: query
          required: false
          schema:
            type: string
            maxLength: 256
            pattern: '.*'
        - name: contactName
          in: query
          required: false
          schema:
            type: string
            maxLength: 128
            pattern: '.*'
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 0
            maximum: 1000000
        - name: size
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 1000
        - name: sort
          in: query
          required: false
          schema:
            type: string
            maxLength: 128
            pattern: '.*'
      responses:
        "200":
          description: Successful response with a paginated list of points of sale
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListPointOfSaleDTO"
          headers:
            Access-Control-Allow-Origin: { $ref: '#/components/headers/Access-Control-Allow-Origin' }
            X-RateLimit-Limit: { $ref: '#/components/headers/X-RateLimit-Limit' }
            X-RateLimit-Remaining: { $ref: '#/components/headers/X-RateLimit-Remaining' }
            X-RateLimit-Reset: { $ref: '#/components/headers/X-RateLimit-Reset' }
        "400":
          description: Bad request - Invalid query parameters
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PointOfSaleErrorDTO"
              example:
                code: POINT_OF_SALE_BAD_REQUEST
                message: Something went wrong handling request
          headers:
            Access-Control-Allow-Origin: { $ref: '#/components/headers/Access-Control-Allow-Origin' }
            X-RateLimit-Limit: { $ref: '#/components/headers/X-RateLimit-Limit' }
            X-RateLimit-Remaining: { $ref: '#/components/headers/X-RateLimit-Remaining' }
            X-RateLimit-Reset: { $ref: '#/components/headers/X-RateLimit-Reset' }
        "401":
          description: Unauthorized - Authentication Failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PointOfSaleErrorDTO"
          headers:
            Access-Control-Allow-Origin: { $ref: '#/components/headers/Access-Control-Allow-Origin' }
            X-RateLimit-Limit: { $ref: '#/components/headers/X-RateLimit-Limit' }
            X-RateLimit-Remaining: { $ref: '#/components/headers/X-RateLimit-Remaining' }
            X-RateLimit-Reset: { $ref: '#/components/headers/X-RateLimit-Reset' }
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PointOfSaleErrorDTO"
              example:
                code: POINT_OF_SALE_NOT_FOUND
                message: Point of sale with id 123 not found.
          headers:
            Access-Control-Allow-Origin: { $ref: '#/components/headers/Access-Control-Allow-Origin' }
            X-RateLimit-Limit: { $ref: '#/components/headers/X-RateLimit-Limit' }
            X-RateLimit-Remaining: { $ref: '#/components/headers/X-RateLimit-Remaining' }
            X-RateLimit-Reset: { $ref: '#/components/headers/X-RateLimit-Reset' }
        "429":
          description: Too many Request - Rate limit exceeded
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PointOfSaleErrorDTO"
              example:
                code: POINT_OF_SALE_TOO_MANY_REQUESTS
                message: Too many requests
          headers:
            Access-Control-Allow-Origin: { $ref: '#/components/headers/Access-Control-Allow-Origin' }
            Retry-After: { $ref: '#/components/headers/Retry-After' }
            X-RateLimit-Limit: { $ref: '#/components/headers/X-RateLimit-Limit' }
            X-RateLimit-Remaining: { $ref: '#/components/headers/X-RateLimit-Remaining' }
            X-RateLimit-Reset: { $ref: '#/components/headers/X-RateLimit-Reset' }
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PointOfSaleErrorDTO"
              example:
                code: POINT_OF_SALE_GENERIC_ERROR
                message: An error occurred during file reading
          headers:
            Access-Control-Allow-Origin: { $ref: '#/components/headers/Access-Control-Allow-Origin' }

  /{merchantId}/point-of-sales/{pointOfSaleId}:
    get:
      tags:
        - point-of-sales
      summary: Retrieve a point of sale
      description: "Return a point of sale for the specified merchant."
      operationId: getPointOfSale
      parameters:
        - name: merchantId
          in: path
          required: true
          schema:
            type: string
            maxLength: 64
            pattern: '.*'
        - name: pointOfSaleId
          in: path
          required: true
          schema:
            type: string
            maxLength: 64
            pattern: '.*'
      responses:
        "200":
          description: Successful response with point of sale detail
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PointOfSaleDTO"
          headers:
            Access-Control-Allow-Origin: { $ref: '#/components/headers/Access-Control-Allow-Origin' }
            X-RateLimit-Limit: { $ref: '#/components/headers/X-RateLimit-Limit' }
            X-RateLimit-Remaining: { $ref: '#/components/headers/X-RateLimit-Remaining' }
            X-RateLimit-Reset: { $ref: '#/components/headers/X-RateLimit-Reset' }
        "400":
          description: Bad request - Invalid query parameters
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PointOfSaleErrorDTO"
              example:
                code: POINT_OF_SALE_BAD_REQUEST
                message: Something went wrong handling request
          headers:
            Access-Control-Allow-Origin: { $ref: '#/components/headers/Access-Control-Allow-Origin' }
            X-RateLimit-Limit: { $ref: '#/components/headers/X-RateLimit-Limit' }
            X-RateLimit-Remaining: { $ref: '#/components/headers/X-RateLimit-Remaining' }
            X-RateLimit-Reset: { $ref: '#/components/headers/X-RateLimit-Reset' }
        "401":
          description: Unauthorized - Authentication Failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PointOfSaleErrorDTO"
          headers:
            Access-Control-Allow-Origin: { $ref: '#/components/headers/Access-Control-Allow-Origin' }
            X-RateLimit-Limit: { $ref: '#/components/headers/X-RateLimit-Limit' }
            X-RateLimit-Remaining: { $ref: '#/components/headers/X-RateLimit-Remaining' }
            X-RateLimit-Reset: { $ref: '#/components/headers/X-RateLimit-Reset' }
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PointOfSaleErrorDTO"
              example:
                code: POINT_OF_SALE_NOT_FOUND
                message: Point of sale with id 123 not found.
          headers:
            Access-Control-Allow-Origin: { $ref: '#/components/headers/Access-Control-Allow-Origin' }
            X-RateLimit-Limit: { $ref: '#/components/headers/X-RateLimit-Limit' }
            X-RateLimit-Remaining: { $ref: '#/components/headers/X-RateLimit-Remaining' }
            X-RateLimit-Reset: { $ref: '#/components/headers/X-RateLimit-Reset' }
        "429":
          description: Too many Request - Rate limit exceeded
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PointOfSaleErrorDTO"
              example:
                code: POINT_OF_SALE_TOO_MANY_REQUESTS
                message: Too many requests
          headers:
            Access-Control-Allow-Origin: { $ref: '#/components/headers/Access-Control-Allow-Origin' }
            Retry-After: { $ref: '#/components/headers/Retry-After' }
            X-RateLimit-Limit: { $ref: '#/components/headers/X-RateLimit-Limit' }
            X-RateLimit-Remaining: { $ref: '#/components/headers/X-RateLimit-Remaining' }
            X-RateLimit-Reset: { $ref: '#/components/headers/X-RateLimit-Reset' }
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PointOfSaleErrorDTO"
              example:
                code: POINT_OF_SALE_GENERIC_ERROR
                message: An error occurred during file reading
          headers:
            Access-Control-Allow-Origin: { $ref: '#/components/headers/Access-Control-Allow-Origin' }

  /initiatives/{initiativeId}/point-of-sales/{pointOfSaleId}/transactions/processed:
    get:
      tags:
        - point-of-sale-transactions
      summary: "ENG: Returns the list of processed transactions associated to a point of sale - IT: Ritorna la lista delle transazioni processate associate ad un punto vendita"
      description: "ENG: Returns the list of processed transactions associated to a point of sale <br> IT: Ritorna la lista delle transazioni processate associate ad un punto vendita"
      operationId: getPointOfSaleTransactionsProcessed
      parameters:
        - name: initiativeId
          in: path
          required: true
          schema:
            type: string
            maxLength: 36
            pattern: '.*'
        - name: pointOfSaleId
          in: path
          required: true
          schema:
            type: string
            maxLength: 36
            pattern: '.*'
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 0
            maximum: 10000
        - name: size
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 1000
        - name: sort
          in: query
          required: false
          schema:
            type: string
            enum:
              - "updateDate, desc"
              - "status, desc"
              - "productName, desc"
              - "updateDate, asc"
              - "status, asc"
              - "productName, asc"
        - name: fiscalCode
          in: query
          description: Fiscal Code
          required: false
          schema:
            type: string
            minLength: 16
            maxLength: 16
            pattern: '^[A-Z0-9]+$'
        - name: status
          in: query
          description: Transaction processed status
          required: false
          schema:
            type: string
            enum: [REWARDED, CANCELLED, REFUNDED]
        - name: productGtin
          in: query
          required: false
          schema:
            type: string
            maxLength: 14
            pattern: '^[a-zA-Z0-9]{1,14}$'
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PointOfSaleTransactionsProcessedListDTO"
          headers:
            Access-Control-Allow-Origin: { $ref: '#/components/headers/Access-Control-Allow-Origin' }
            X-RateLimit-Limit: { $ref: '#/components/headers/X-RateLimit-Limit' }
            X-RateLimit-Remaining: { $ref: '#/components/headers/X-RateLimit-Remaining' }
            X-RateLimit-Reset: { $ref: '#/components/headers/X-RateLimit-Reset' }
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TransactionErrorDTO"
              example:
                code: "PAYMENT_INVALID_REQUEST"
                message: "Something went wrong handling the request"
          headers:
            Access-Control-Allow-Origin: { $ref: '#/components/headers/Access-Control-Allow-Origin' }
            X-RateLimit-Limit: { $ref: '#/components/headers/X-RateLimit-Limit' }
            X-RateLimit-Remaining: { $ref: '#/components/headers/X-RateLimit-Remaining' }
            X-RateLimit-Reset: { $ref: '#/components/headers/X-RateLimit-Reset' }
        "401":
          description: Authentication failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TransactionErrorDTO"
          headers:
            Access-Control-Allow-Origin: { $ref: '#/components/headers/Access-Control-Allow-Origin' }
            X-RateLimit-Limit: { $ref: '#/components/headers/X-RateLimit-Limit' }
            X-RateLimit-Remaining: { $ref: '#/components/headers/X-RateLimit-Remaining' }
            X-RateLimit-Reset: { $ref: '#/components/headers/X-RateLimit-Reset' }
        "429":
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TransactionErrorDTO"
              example:
                code: "PAYMENT_TOO_MANY_REQUESTS"
                message: "Too many requests"
          headers:
            Access-Control-Allow-Origin: { $ref: '#/components/headers/Access-Control-Allow-Origin' }
            Retry-After: { $ref: '#/components/headers/Retry-After' }
            X-RateLimit-Limit: { $ref: '#/components/headers/X-RateLimit-Limit' }
            X-RateLimit-Remaining: { $ref: '#/components/headers/X-RateLimit-Remaining' }
            X-RateLimit-Reset: { $ref: '#/components/headers/X-RateLimit-Reset' }
        "500":
          description: Generic error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TransactionErrorDTO"
              example:
                code: "PAYMENT_GENERIC_ERROR"
                message: "Application error"
          headers:
            Access-Control-Allow-Origin: { $ref: '#/components/headers/Access-Control-Allow-Origin' }

  /initiatives:
    get:
      tags:
        - merchant-initiatives
      summary: "ENG: Returns the list of initiatives of a specific merchant - IT: Ritorna la lista delle iniziative di uno specifico merchant"
      description: Returns the list of initiatives of a specific merchant
      operationId: getMerchantInitiativeList
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                type: array
                maxItems: 1000
                items:
                  $ref: "#/components/schemas/InitiativeDTO"
          headers:
            Access-Control-Allow-Origin: { $ref: '#/components/headers/Access-Control-Allow-Origin' }
            X-RateLimit-Limit: { $ref: '#/components/headers/X-RateLimit-Limit' }
            X-RateLimit-Remaining: { $ref: '#/components/headers/X-RateLimit-Remaining' }
            X-RateLimit-Reset: { $ref: '#/components/headers/X-RateLimit-Reset' }
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MerchantErrorDTO"
              example:
                code: MERCHANT_INVALID_REQUEST
                message: Something went wrong handling request
          headers:
            Access-Control-Allow-Origin: { $ref: '#/components/headers/Access-Control-Allow-Origin' }
            X-RateLimit-Limit: { $ref: '#/components/headers/X-RateLimit-Limit' }
            X-RateLimit-Remaining: { $ref: '#/components/headers/X-RateLimit-Remaining' }
            X-RateLimit-Reset: { $ref: '#/components/headers/X-RateLimit-Reset' }
        "401":
          description: Authentication failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MerchantErrorDTO"
          headers:
            Access-Control-Allow-Origin: { $ref: '#/components/headers/Access-Control-Allow-Origin' }
            X-RateLimit-Limit: { $ref: '#/components/headers/X-RateLimit-Limit' }
            X-RateLimit-Remaining: { $ref: '#/components/headers/X-RateLimit-Remaining' }
            X-RateLimit-Reset: { $ref: '#/components/headers/X-RateLimit-Reset' }
        "429":
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MerchantErrorDTO"
              example:
                code: MERCHANT_TOO_MANY_REQUESTS
                message: Too many requests
          headers:
            Access-Control-Allow-Origin: { $ref: '#/components/headers/Access-Control-Allow-Origin' }
            Retry-After: { $ref: '#/components/headers/Retry-After' }
            X-RateLimit-Limit: { $ref: '#/components/headers/X-RateLimit-Limit' }
            X-RateLimit-Remaining: { $ref: '#/components/headers/X-RateLimit-Remaining' }
            X-RateLimit-Reset: { $ref: '#/components/headers/X-RateLimit-Reset' }
        "500":
          description: Server ERROR
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MerchantErrorDTO"
              example:
                code: MERCHANT_GENERIC_ERROR
                message: An error occurred
          headers:
            Access-Control-Allow-Origin: { $ref: '#/components/headers/Access-Control-Allow-Origin' }

  /initiatives/{initiativeId}/statistics:
    get:
      tags:
        - merchant-initiative-statistics
      summary: "ENG: Returns the merchant statistics on the initiative - IT: Ritorna le statistiche dell'esercente sull'iniziativa"
      description: Returns the merchant statistics on the initiative
      operationId: getMerchantInitiativeStatistics
      parameters:
        - name: initiativeId
          in: path
          description: The initiative ID
          required: true
          schema:
            type: string
            maxLength: 64
            pattern: '.*'
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MerchantStatisticsDTO"
          headers:
            Access-Control-Allow-Origin: { $ref: '#/components/headers/Access-Control-Allow-Origin' }
            X-RateLimit-Limit: { $ref: '#/components/headers/X-RateLimit-Limit' }
            X-RateLimit-Remaining: { $ref: '#/components/headers/X-RateLimit-Remaining' }
            X-RateLimit-Reset: { $ref: '#/components/headers/X-RateLimit-Reset' }
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StatisticsErrorDTO"
              example:
                code: STATISTICS_INVALID_REQUEST
                message: Something went wrong handling request
          headers:
            Access-Control-Allow-Origin: { $ref: '#/components/headers/Access-Control-Allow-Origin' }
            X-RateLimit-Limit: { $ref: '#/components/headers/X-RateLimit-Limit' }
            X-RateLimit-Remaining: { $ref: '#/components/headers/X-RateLimit-Remaining' }
            X-RateLimit-Reset: { $ref: '#/components/headers/X-RateLimit-Reset' }
        "401":
          description: Authentication failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StatisticsErrorDTO"
          headers:
            Access-Control-Allow-Origin: { $ref: '#/components/headers/Access-Control-Allow-Origin' }
            X-RateLimit-Limit: { $ref: '#/components/headers/X-RateLimit-Limit' }
            X-RateLimit-Remaining: { $ref: '#/components/headers/X-RateLimit-Remaining' }
            X-RateLimit-Reset: { $ref: '#/components/headers/X-RateLimit-Reset' }
        "404":
          description: The requested ID was not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StatisticsErrorDTO"
              example:
                code: STATISTICS_NOT_FOUND
                message: Stats not found
          headers:
            Access-Control-Allow-Origin: { $ref: '#/components/headers/Access-Control-Allow-Origin' }
            X-RateLimit-Limit: { $ref: '#/components/headers/X-RateLimit-Limit' }
            X-RateLimit-Remaining: { $ref: '#/components/headers/X-RateLimit-Remaining' }
            X-RateLimit-Reset: { $ref: '#/components/headers/X-RateLimit-Reset' }
        "429":
          description: Too many Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StatisticsErrorDTO"
              example:
                code: STATISTICS_MANAGER_TOO_MANY_REQUESTS
                message: Too many requests
          headers:
            Access-Control-Allow-Origin: { $ref: '#/components/headers/Access-Control-Allow-Origin' }
            Retry-After: { $ref: '#/components/headers/Retry-After' }
            X-RateLimit-Limit: { $ref: '#/components/headers/X-RateLimit-Limit' }
            X-RateLimit-Remaining: { $ref: '#/components/headers/X-RateLimit-Remaining' }
            X-RateLimit-Reset: { $ref: '#/components/headers/X-RateLimit-Reset' }
        "500":
          description: Server ERROR
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StatisticsErrorDTO"
              example:
                code: STATISTICS_MANAGER_GENERIC_ERROR
                message: Application error
          headers:
            Access-Control-Allow-Origin: { $ref: '#/components/headers/Access-Control-Allow-Origin' }

  /transactions:
    post:
      tags:
        - merchant-transactions
      summary: "ENG: Merchant create transaction - IT: Creazione transazione da parte dell'esercente"
      description: "ENG: Merchant creates a transaction - IT: Creazione transazione da parte dell'esercente"
      operationId: createTransaction
      requestBody:
        description: General information about Transaction
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TransactionCreationRequest"
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TransactionResponse"
          headers:
            Access-Control-Allow-Origin: { $ref: '#/components/headers/Access-Control-Allow-Origin' }
            X-RateLimit-Limit: { $ref: '#/components/headers/X-RateLimit-Limit' }
            X-RateLimit-Remaining: { $ref: '#/components/headers/X-RateLimit-Remaining' }
            X-RateLimit-Reset: { $ref: '#/components/headers/X-RateLimit-Reset' }
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TransactionErrorDTO"
              example:
                code: PAYMENT_INVALID_REQUEST
                message: Something went wrong handling the request
          headers:
            Access-Control-Allow-Origin: { $ref: '#/components/headers/Access-Control-Allow-Origin' }
            X-RateLimit-Limit: { $ref: '#/components/headers/X-RateLimit-Limit' }
            X-RateLimit-Remaining: { $ref: '#/components/headers/X-RateLimit-Remaining' }
            X-RateLimit-Reset: { $ref: '#/components/headers/X-RateLimit-Reset' }
        "401":
          description: Authentication failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TransactionErrorDTO"
          headers:
            Access-Control-Allow-Origin: { $ref: '#/components/headers/Access-Control-Allow-Origin' }
            X-RateLimit-Limit: { $ref: '#/components/headers/X-RateLimit-Limit' }
            X-RateLimit-Remaining: { $ref: '#/components/headers/X-RateLimit-Remaining' }
            X-RateLimit-Reset: { $ref: '#/components/headers/X-RateLimit-Reset' }
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TransactionErrorDTO"
              example:
                code: PAYMENT_INITIATIVE_INVALID_DATE
                message: "Cannot create transaction out of valid period. Initiative startDate: %s endDate: %s"
          headers:
            Access-Control-Allow-Origin: { $ref: '#/components/headers/Access-Control-Allow-Origin' }
            X-RateLimit-Limit: { $ref: '#/components/headers/X-RateLimit-Limit' }
            X-RateLimit-Remaining: { $ref: '#/components/headers/X-RateLimit-Remaining' }
            X-RateLimit-Reset: { $ref: '#/components/headers/X-RateLimit-Reset' }
        "404":
          description: The requested resource was not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TransactionErrorDTO"
              example:
                code: PAYMENT_INITIATIVE_NOT_FOUND
                message: "Cannot find initiative with id [%s]"
          headers:
            Access-Control-Allow-Origin: { $ref: '#/components/headers/Access-Control-Allow-Origin' }
            X-RateLimit-Limit: { $ref: '#/components/headers/X-RateLimit-Limit' }
            X-RateLimit-Remaining: { $ref: '#/components/headers/X-RateLimit-Remaining' }
            X-RateLimit-Reset: { $ref: '#/components/headers/X-RateLimit-Reset' }
        "429":
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TransactionErrorDTO"
              example:
                code: PAYMENT_TOO_MANY_REQUESTS
                message: Too many requests
          headers:
            Access-Control-Allow-Origin: { $ref: '#/components/headers/Access-Control-Allow-Origin' }
            Retry-After: { $ref: '#/components/headers/Retry-After' }
            X-RateLimit-Limit: { $ref: '#/components/headers/X-RateLimit-Limit' }
            X-RateLimit-Remaining: { $ref: '#/components/headers/X-RateLimit-Remaining' }
            X-RateLimit-Reset: { $ref: '#/components/headers/X-RateLimit-Reset' }
        "500":
          description: Generic error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TransactionErrorDTO"
              example:
                code: PAYMENT_GENERIC_ERROR
                message: Application error
          headers:
            Access-Control-Allow-Origin: { $ref: '#/components/headers/Access-Control-Allow-Origin' }

  /transactions/{transactionId}:
    delete:
      tags:
        - merchant-transactions
      summary: "ENG: Merchant delete transaction - IT: Cancellazione transazione da parte dell'esercente"
      description: "ENG: Delete a transaction created by the merchant - IT: Cancellazione di una transazione creata dall'esercente"
      operationId: deleteTransaction
      parameters:
        - name: transactionId
          in: path
          description: The transaction ID
          required: true
          schema:
            type: string
            maxLength: 64
            pattern: '.*'
      responses:
        "200":
          description: Ok
          headers:
            Access-Control-Allow-Origin: { $ref: '#/components/headers/Access-Control-Allow-Origin' }
            X-RateLimit-Limit: { $ref: '#/components/headers/X-RateLimit-Limit' }
            X-RateLimit-Remaining: { $ref: '#/components/headers/X-RateLimit-Remaining' }
            X-RateLimit-Reset: { $ref: '#/components/headers/X-RateLimit-Reset' }
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TransactionErrorDTO"
              example:
                code: PAYMENT_INVALID_REQUEST
                message: Something went wrong handling the request
          headers:
            Access-Control-Allow-Origin: { $ref: '#/components/headers/Access-Control-Allow-Origin' }
            X-RateLimit-Limit: { $ref: '#/components/headers/X-RateLimit-Limit' }
            X-RateLimit-Remaining: { $ref: '#/components/headers/X-RateLimit-Remaining' }
            X-RateLimit-Reset: { $ref: '#/components/headers/X-RateLimit-Reset' }
        "401":
          description: Authentication failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TransactionErrorDTO"
          headers:
            Access-Control-Allow-Origin: { $ref: '#/components/headers/Access-Control-Allow-Origin' }
            X-RateLimit-Limit: { $ref: '#/components/headers/X-RateLimit-Limit' }
            X-RateLimit-Remaining: { $ref: '#/components/headers/X-RateLimit-Remaining' }
            X-RateLimit-Reset: { $ref: '#/components/headers/X-RateLimit-Reset' }
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TransactionErrorDTO"
              example:
                code: PAYMENT_NOT_ALLOWED_MISMATCHED_MERCHANT
                message: "The merchant with id [%s] associated to the transaction is not equal to the merchant with id [%s]"
          headers:
            Access-Control-Allow-Origin: { $ref: '#/components/headers/Access-Control-Allow-Origin' }
            X-RateLimit-Limit: { $ref: '#/components/headers/X-RateLimit-Limit' }
            X-RateLimit-Remaining: { $ref: '#/components/headers/X-RateLimit-Remaining' }
            X-RateLimit-Reset: { $ref: '#/components/headers/X-RateLimit-Reset' }
        "404":
          description: The requested resource was not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TransactionErrorDTO"
              example:
                code: PAYMENT_NOT_FOUND_OR_EXPIRED
                message: "Cannot find transaction with transactionId [%s]"
          headers:
            Access-Control-Allow-Origin: { $ref: '#/components/headers/Access-Control-Allow-Origin' }
            X-RateLimit-Limit: { $ref: '#/components/headers/X-RateLimit-Limit' }
            X-RateLimit-Remaining: { $ref: '#/components/headers/X-RateLimit-Remaining' }
            X-RateLimit-Reset: { $ref: '#/components/headers/X-RateLimit-Reset' }
        "429":
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TransactionErrorDTO"
              example:
                code: PAYMENT_TOO_MANY_REQUESTS
                message: Too many requests
          headers:
            Access-Control-Allow-Origin: { $ref: '#/components/headers/Access-Control-Allow-Origin' }
            Retry-After: { $ref: '#/components/headers/Retry-After' }
            X-RateLimit-Limit: { $ref: '#/components/headers/X-RateLimit-Limit' }
            X-RateLimit-Remaining: { $ref: '#/components/headers/X-RateLimit-Remaining' }
            X-RateLimit-Reset: { $ref: '#/components/headers/X-RateLimit-Reset' }
        "500":
          description: Generic error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TransactionErrorDTO"
              example:
                code: PAYMENT_GENERIC_ERROR
                message: Application error
          headers:
            Access-Control-Allow-Origin: { $ref: '#/components/headers/Access-Control-Allow-Origin' }

  /initiatives/{initiativeId}/transactions:
    get:
      tags:
        - merchant-transactions
      summary: "ENG: Returns the list of in progress transactions associated to a merchant - IT: Ritorna la lista delle transazioni in corso associate ad un esercente"
      description: "ENG: Returns the list of in progress transactions associated to a merchant <br> IT: Ritorna la lista delle transazioni in corso associate ad un esercente"
      operationId: getMerchantTransactions
      parameters:
        - name: initiativeId
          in: path
          description: The initiative ID
          required: true
          schema:
            type: string
            maxLength: 64
            pattern: '.*'
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MerchantTransactionsListDTO"
          headers:
            Access-Control-Allow-Origin: { $ref: '#/components/headers/Access-Control-Allow-Origin' }
            X-RateLimit-Limit: { $ref: '#/components/headers/X-RateLimit-Limit' }
            X-RateLimit-Remaining: { $ref: '#/components/headers/X-RateLimit-Remaining' }
            X-RateLimit-Reset: { $ref: '#/components/headers/X-RateLimit-Reset' }
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TransactionErrorDTO"
              example: { code: PAYMENT_INVALID_REQUEST, message: "Something went wrong handling the request" }
          headers:
            Access-Control-Allow-Origin: { $ref: '#/components/headers/Access-Control-Allow-Origin' }
            X-RateLimit-Limit: { $ref: '#/components/headers/X-RateLimit-Limit' }
            X-RateLimit-Remaining: { $ref: '#/components/headers/X-RateLimit-Remaining' }
            X-RateLimit-Reset: { $ref: '#/components/headers/X-RateLimit-Reset' }
        "401":
          description: Authentication failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TransactionErrorDTO"
          headers:
            Access-Control-Allow-Origin: { $ref: '#/components/headers/Access-Control-Allow-Origin' }
            X-RateLimit-Limit: { $ref: '#/components/headers/X-RateLimit-Limit' }
            X-RateLimit-Remaining: { $ref: '#/components/headers/X-RateLimit-Remaining' }
            X-RateLimit-Reset: { $ref: '#/components/headers/X-RateLimit-Reset' }
        "429":
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TransactionErrorDTO"
              example: { code: PAYMENT_TOO_MANY_REQUESTS, message: "Too many requests" }
          headers:
            Access-Control-Allow-Origin: { $ref: '#/components/headers/Access-Control-Allow-Origin' }
            Retry-After: { $ref: '#/components/headers/Retry-After' }
            X-RateLimit-Limit: { $ref: '#/components/headers/X-RateLimit-Limit' }
            X-RateLimit-Remaining: { $ref: '#/components/headers/X-RateLimit-Remaining' }
            X-RateLimit-Reset: { $ref: '#/components/headers/X-RateLimit-Reset' }

  /initiatives/{initiativeId}/transactions/processed:
    get:
      tags:
        - merchant-transactions
      summary: "ENG: Returns the list of processed transactions associated to a merchant - IT: Ritorna la lista delle transazioni processate associate ad un esercente"
      description: "ENG: Returns the list of processed transactions associated to a merchant <br> IT: Ritorna la lista delle transazioni processate associate ad un esercente"
      operationId: getMerchantTransactionsProcessed
      parameters:
        - name: initiativeId
          in: path
          description: The initiative ID
          required: true
          schema:
            type: string
            maxLength: 64
            pattern: '.*'
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MerchantTransactionsProcessedListDTO"
          headers:
            Access-Control-Allow-Origin: { $ref: '#/components/headers/Access-Control-Allow-Origin' }
            X-RateLimit-Limit: { $ref: '#/components/headers/X-RateLimit-Limit' }
            X-RateLimit-Remaining: { $ref: '#/components/headers/X-RateLimit-Remaining' }
            X-RateLimit-Reset: { $ref: '#/components/headers/X-RateLimit-Reset' }
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TransactionErrorDTO"
              example:
                code: PAYMENT_INVALID_REQUEST
                message: Something went wrong handling the request
          headers:
            Access-Control-Allow-Origin: { $ref: '#/components/headers/Access-Control-Allow-Origin' }
            X-RateLimit-Limit: { $ref: '#/components/headers/X-RateLimit-Limit' }
            X-RateLimit-Remaining: { $ref: '#/components/headers/X-RateLimit-Remaining' }
            X-RateLimit-Reset: { $ref: '#/components/headers/X-RateLimit-Reset' }
        "401":
          description: Authentication failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TransactionErrorDTO"
          headers:
            Access-Control-Allow-Origin: { $ref: '#/components/headers/Access-Control-Allow-Origin' }
            X-RateLimit-Limit: { $ref: '#/components/headers/X-RateLimit-Limit' }
            X-RateLimit-Remaining: { $ref: '#/components/headers/X-RateLimit-Remaining' }
            X-RateLimit-Reset: { $ref: '#/components/headers/X-RateLimit-Reset' }
        "404":
          description: The requested resource was not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TransactionErrorDTO"
          headers:
            Access-Control-Allow-Origin: { $ref: '#/components/headers/Access-Control-Allow-Origin' }
            X-RateLimit-Limit: { $ref: '#/components/headers/X-RateLimit-Limit' }
            X-RateLimit-Remaining: { $ref: '#/components/headers/X-RateLimit-Remaining' }
            X-RateLimit-Reset: { $ref: '#/components/headers/X-RateLimit-Reset' }
        "429":
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TransactionErrorDTO"
              example:
                code: PAYMENT_TOO_MANY_REQUESTS
                message: Too many requests
          headers:
            Access-Control-Allow-Origin: { $ref: '#/components/headers/Access-Control-Allow-Origin' }
            Retry-After: { $ref: '#/components/headers/Retry-After' }
            X-RateLimit-Limit: { $ref: '#/components/headers/X-RateLimit-Limit' }
            X-RateLimit-Remaining: { $ref: '#/components/headers/X-RateLimit-Remaining' }
            X-RateLimit-Reset: { $ref: '#/components/headers/X-RateLimit-Reset' }
        "500":
          description: Generic error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TransactionErrorDTO"
              example:
                code: PAYMENT_GENERIC_ERROR
                message: Application error
          headers:
            Access-Control-Allow-Origin: { $ref: '#/components/headers/Access-Control-Allow-Origin' }

  /transactions/bar-code/{trxCode}/authorize:
    put:
      tags:
        - merchant-transactions
      summary: "ENG: Authorize payment - IT: Autorizzazione pagamento"
      description: "ENG: Authorize a payment by barcode - IT: Autorizza un pagamento tramite barcode"
      operationId: authPaymentBarCode
      parameters:
        - name: trxCode
          in: path
          description: "ENG: The transaction's code - IT: Codice della transazione"
          required: true
          schema:
            type: string
            maxLength: 64
            pattern: '.*'
      requestBody:
        description: Request about auth bar-code trx
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AuthBarCodePaymentDTO"
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthPaymentResponseDTO"
          headers:
            Access-Control-Allow-Origin: { $ref: '#/components/headers/Access-Control-Allow-Origin' }
            X-RateLimit-Limit: { $ref: '#/components/headers/X-RateLimit-Limit' }
            X-RateLimit-Remaining: { $ref: '#/components/headers/X-RateLimit-Remaining' }
            X-RateLimit-Reset: { $ref: '#/components/headers/X-RateLimit-Reset' }
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TransactionErrorDTO"
              example:
                code: PAYMENT_AMOUNT_NOT_VALID
                message: "Cannot authorize transaction with invalid amount [%s]"
          headers:
            Access-Control-Allow-Origin: { $ref: '#/components/headers/Access-Control-Allow-Origin' }
            X-RateLimit-Limit: { $ref: '#/components/headers/X-RateLimit-Limit' }
            X-RateLimit-Remaining: { $ref: '#/components/headers/X-RateLimit-Remaining' }
            X-RateLimit-Reset: { $ref: '#/components/headers/X-RateLimit-Reset' }
        "401":
          description: Authentication failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TransactionErrorDTO"
          headers:
            Access-Control-Allow-Origin: { $ref: '#/components/headers/Access-Control-Allow-Origin' }
            X-RateLimit-Limit: { $ref: '#/components/headers/X-RateLimit-Limit' }
            X-RateLimit-Remaining: { $ref: '#/components/headers/X-RateLimit-Remaining' }
            X-RateLimit-Reset: { $ref: '#/components/headers/X-RateLimit-Reset' }
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TransactionErrorDTO"
              example:
                code: PAYMENT_ALREADY_AUTHORIZED
                message: "Transaction with trxCode [trxCode] is already authorized"
          headers:
            Access-Control-Allow-Origin: { $ref: '#/components/headers/Access-Control-Allow-Origin' }
            X-RateLimit-Limit: { $ref: '#/components/headers/X-RateLimit-Limit' }
            X-RateLimit-Remaining: { $ref: '#/components/headers/X-RateLimit-Remaining' }
            X-RateLimit-Reset: { $ref: '#/components/headers/X-RateLimit-Reset' }
        "404":
          description: The requested resource was not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TransactionErrorDTO"
              example:
                code: PAYMENT_NOT_FOUND_EXPIRED
                message: "Cannot find transaction with trxCode [trxCode]"
          headers:
            Access-Control-Allow-Origin: { $ref: '#/components/headers/Access-Control-Allow-Origin' }
            X-RateLimit-Limit: { $ref: '#/components/headers/X-RateLimit-Limit' }
            X-RateLimit-Remaining: { $ref: '#/components/headers/X-RateLimit-Remaining' }
            X-RateLimit-Reset: { $ref: '#/components/headers/X-RateLimit-Reset' }
        "429":
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TransactionErrorDTO"
              example:
                code: PAYMENT_TOO_MANY_REQUESTS
                message: Too many request on the ms reward calculator
          headers:
            Access-Control-Allow-Origin: { $ref: '#/components/headers/Access-Control-Allow-Origin' }
            Retry-After: { $ref: '#/components/headers/Retry-After' }
            X-RateLimit-Limit: { $ref: '#/components/headers/X-RateLimit-Limit' }
            X-RateLimit-Remaining: { $ref: '#/components/headers/X-RateLimit-Remaining' }
            X-RateLimit-Reset: { $ref: '#/components/headers/X-RateLimit-Reset' }
        "500":
          description: Generic error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TransactionErrorDTO"
              example:
                code: PAYMENT_GENERIC_ERROR
                message: A generic error occurred
          headers:
            Access-Control-Allow-Origin: { $ref: '#/components/headers/Access-Control-Allow-Origin' }
  /{pointOfSaleId}/transactions/{transactionId}/download:
    get:
      tags:
        - transaction
      summary: "ENG: Download invoice file - IT: Scarica il file della fattura"
      description: "ENG: Download the invoice file of the transaction<br> IT: Scarica il file della fattura della transazione"
      operationId: downloadInvoiceFile
      parameters:
        - name: pointOfSaleId
          in: path
          description: "ENG: Point of sale ID - IT: ID del punto vendita"
          required: true
          schema:
            type: string
            maxLength: 64
            pattern: '.*'
        - name: transactionId
          in: path
          description: "ENG: Transaction ID - IT: ID della transazione"
          required: true
          schema:
            type: string
            maxLength: 64
            pattern: '.*'
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DownloadInvoiceResponseDTO"
          headers:
            Access-Control-Allow-Origin: { $ref: '#/components/headers/Access-Control-Allow-Origin' }
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TransactionErrorDTO"
              example: { code: PAYMENT_INVALID_REQUEST, message: "Something went wrong handling request" }
          headers:
            Access-Control-Allow-Origin: { $ref: '#/components/headers/Access-Control-Allow-Origin' }
            X-RateLimit-Limit: { $ref: '#/components/headers/X-RateLimit-Limit' }
            X-RateLimit-Remaining: { $ref: '#/components/headers/X-RateLimit-Remaining' }
            X-RateLimit-Reset: { $ref: '#/components/headers/X-RateLimit-Reset' }
        "401":
          description: Authentication failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TransactionErrorDTO"
          headers:
            Access-Control-Allow-Origin: { $ref: '#/components/headers/Access-Control-Allow-Origin' }
            X-RateLimit-Limit: { $ref: '#/components/headers/X-RateLimit-Limit' }
            X-RateLimit-Remaining: { $ref: '#/components/headers/X-RateLimit-Remaining' }
            X-RateLimit-Reset: { $ref: '#/components/headers/X-RateLimit-Reset' }
        "429":
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TransactionErrorDTO"
              example: { code: PAYMENT_TOO_MANY_REQUESTS, message: "Too many requests" }
          headers:
            Access-Control-Allow-Origin: { $ref: '#/components/headers/Access-Control-Allow-Origin' }
            Retry-After: { $ref: '#/components/headers/Retry-After' }
            X-RateLimit-Limit: { $ref: '#/components/headers/X-RateLimit-Limit' }
            X-RateLimit-Remaining: { $ref: '#/components/headers/X-RateLimit-Remaining' }
            X-RateLimit-Reset: { $ref: '#/components/headers/X-RateLimit-Reset' }
        "500":
          description: Generic error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TransactionErrorDTO"
              example: { code: PAYMENT_GENERIC_ERROR, message: "An error occurred during file reading" }
          headers:
            Access-Control-Allow-Origin: { $ref: '#/components/headers/Access-Control-Allow-Origin' }
  /initiatives/{initiativeId}:
    get:
      tags:
        - merchant-detail
      summary: "ENG: Returns the merchant detail on initiative - IT: Ritorna il dettaglio dell' esercente sull'iniziativa"
      description: "ENG: Returns the merchant detail on initiative <br> IT: Dettaglio dell' esercente sull'iniziativa"
      operationId: getMerchantDetail
      parameters:
        - name: initiativeId
          in: path
          description: The initiative ID
          required: true
          schema:
            type: string
            maxLength: 64
            pattern: '.*'
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MerchantDetailDTO"
          headers:
            Access-Control-Allow-Origin: { $ref: '#/components/headers/Access-Control-Allow-Origin' }
            X-RateLimit-Limit: { $ref: '#/components/headers/X-RateLimit-Limit' }
            X-RateLimit-Remaining: { $ref: '#/components/headers/X-RateLimit-Remaining' }
            X-RateLimit-Reset: { $ref: '#/components/headers/X-RateLimit-Reset' }
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MerchantErrorDTO"
              example: { code: MERCHANT_INVALID_REQUEST, message: "Something went wrong handling request" }
          headers:
            Access-Control-Allow-Origin: { $ref: '#/components/headers/Access-Control-Allow-Origin' }
            X-RateLimit-Limit: { $ref: '#/components/headers/X-RateLimit-Limit' }
            X-RateLimit-Remaining: { $ref: '#/components/headers/X-RateLimit-Remaining' }
            X-RateLimit-Reset: { $ref: '#/components/headers/X-RateLimit-Reset' }
        "401":
          description: Authentication failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MerchantErrorDTO"
          headers:
            Access-Control-Allow-Origin: { $ref: '#/components/headers/Access-Control-Allow-Origin' }
            X-RateLimit-Limit: { $ref: '#/components/headers/X-RateLimit-Limit' }
            X-RateLimit-Remaining: { $ref: '#/components/headers/X-RateLimit-Remaining' }
            X-RateLimit-Reset: { $ref: '#/components/headers/X-RateLimit-Reset' }
        "404":
          description: The requested ID was not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MerchantErrorDTO"
              example: { code: MERCHANT_NOT_ONBOARDED, message: "The current merchant is not onboarded on initiative" }
          headers:
            Access-Control-Allow-Origin: { $ref: '#/components/headers/Access-Control-Allow-Origin' }
            X-RateLimit-Limit: { $ref: '#/components/headers/X-RateLimit-Limit' }
            X-RateLimit-Remaining: { $ref: '#/components/headers/X-RateLimit-Remaining' }
            X-RateLimit-Reset: { $ref: '#/components/headers/X-RateLimit-Reset' }
        "429":
          description: Too many Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MerchantErrorDTO"
              example: { code: MERCHANT_TOO_MANY_REQUESTS, message: "Too many requests" }
          headers:
            Access-Control-Allow-Origin: { $ref: '#/components/headers/Access-Control-Allow-Origin' }
            Retry-After: { $ref: '#/components/headers/Retry-After' }
            X-RateLimit-Limit: { $ref: '#/components/headers/X-RateLimit-Limit' }
            X-RateLimit-Remaining: { $ref: '#/components/headers/X-RateLimit-Remaining' }
            X-RateLimit-Reset: { $ref: '#/components/headers/X-RateLimit-Reset' }

    patch:
      tags:
        - merchant-detail
      summary: Update merchant IBAN
      description: "ENG: Update the IBAN of a merchant for a specific initiative <br> IT: Aggiornamento dell'IBAN di un esercente per una specifica iniziativa"
      operationId: updateMerchantIban
      parameters:
        - name: initiativeId
          in: path
          description: The initiative ID
          required: true
          schema:
            type: string
            maxLength: 64
            pattern: '.*'
      requestBody:
        description: The IBAN to be updated
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MerchantIbanPatchDTO"
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MerchantDetailDTO"
          headers:
            Access-Control-Allow-Origin: { $ref: '#/components/headers/Access-Control-Allow-Origin' }
            X-RateLimit-Limit: { $ref: '#/components/headers/X-RateLimit-Limit' }
            X-RateLimit-Remaining: { $ref: '#/components/headers/X-RateLimit-Remaining' }
            X-RateLimit-Reset: { $ref: '#/components/headers/X-RateLimit-Reset' }
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MerchantErrorDTO"
              example: { code: MERCHANT_INVALID_REQUEST, message: "Something went wrong handling request" }
          headers:
            Access-Control-Allow-Origin: { $ref: '#/components/headers/Access-Control-Allow-Origin' }
            X-RateLimit-Limit: { $ref: '#/components/headers/X-RateLimit-Limit' }
            X-RateLimit-Remaining: { $ref: '#/components/headers/X-RateLimit-Remaining' }
            X-RateLimit-Reset: { $ref: '#/components/headers/X-RateLimit-Reset' }
        "401":
          description: Authentication failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MerchantErrorDTO"
          headers:
            Access-Control-Allow-Origin: { $ref: '#/components/headers/Access-Control-Allow-Origin' }
            X-RateLimit-Limit: { $ref: '#/components/headers/X-RateLimit-Limit' }
            X-RateLimit-Remaining: { $ref: '#/components/headers/X-RateLimit-Remaining' }
            X-RateLimit-Reset: { $ref: '#/components/headers/X-RateLimit-Reset' }
        "404":
          description: The requested ID was not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MerchantErrorDTO"
              example: { code: MERCHANT_NOT_ONBOARDED, message: "The current merchant is not onboarded on initiative" }
          headers:
            Access-Control-Allow-Origin: { $ref: '#/components/headers/Access-Control-Allow-Origin' }
            X-RateLimit-Limit: { $ref: '#/components/headers/X-RateLimit-Limit' }
            X-RateLimit-Remaining: { $ref: '#/components/headers/X-RateLimit-Remaining' }
            X-RateLimit-Reset: { $ref: '#/components/headers/X-RateLimit-Reset' }
        "429":
          description: Too many Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MerchantErrorDTO"
              example: { code: MERCHANT_TOO_MANY_REQUESTS, message: "Too many requests" }
          headers:
            Access-Control-Allow-Origin: { $ref: '#/components/headers/Access-Control-Allow-Origin' }
            Retry-After: { $ref: '#/components/headers/Retry-After' }
            X-RateLimit-Limit: { $ref: '#/components/headers/X-RateLimit-Limit' }
            X-RateLimit-Remaining: { $ref: '#/components/headers/X-RateLimit-Remaining' }
            X-RateLimit-Reset: { $ref: '#/components/headers/X-RateLimit-Reset' }


  /reported-user:
    post:
      tags:
        - reported-user
      summary: Create reported user
      description: "ENG: Flag a user (fiscal code) for a merchant/initiative pair <br> IT: Segnala un utente (CF) per coppia merchant/iniziativa"
      operationId: createReportedUser
      security:
        - Bearer: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReportedUserRequestDTO'
            examples:
              createReportedUser:
                value:
                  merchantId: "MERCHANT_12345"
                  initiativeId: "INITIATIVE_67890"
                  userFiscalCode: "RSSMRA85T10A562S"
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MerchantDetailDTO"
          headers:
            Access-Control-Allow-Origin: { $ref: '#/components/headers/Access-Control-Allow-Origin' }
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MerchantErrorDTO"
              example:
                code: MERCHANT_INVALID_REQUEST
                message: Something went wrong handling request
          headers:
            Access-Control-Allow-Origin: { $ref: '#/components/headers/Access-Control-Allow-Origin' }
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MerchantErrorDTO'
              example:
                code: MERCHANT_NOT_FOUND
                message: Resource not found
          headers:
            Access-Control-Allow-Origin: { $ref: '#/components/headers/Access-Control-Allow-Origin' }
            X-RateLimit-Limit: { $ref: '#/components/headers/X-RateLimit-Limit' }
            X-RateLimit-Remaining: { $ref: '#/components/headers/X-RateLimit-Remaining' }
            X-RateLimit-Reset: { $ref: '#/components/headers/X-RateLimit-Reset' }

        "401":
          description: Authentication failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MerchantErrorDTO"
          headers:
            Access-Control-Allow-Origin: { $ref: '#/components/headers/Access-Control-Allow-Origin' }
        "429":
          description: Too many Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MerchantErrorDTO"
              example:
                code: MERCHANT_TOO_MANY_REQUESTS
                message: Too many requests
          headers:
            Access-Control-Allow-Origin: { $ref: '#/components/headers/Access-Control-Allow-Origin' }
            Retry-After: { $ref: '#/components/headers/Retry-After' }
        "500":
          description: Server ERROR
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MerchantErrorDTO"
              example:
                code: MERCHANT_GENERIC_ERROR
                message: An error occurred during the update
          headers:
            Access-Control-Allow-Origin: { $ref: '#/components/headers/Access-Control-Allow-Origin' }
    get:
      tags: [ reported-user ]
      summary: Search reported users
      description: "ENG: Search reported users by optional filters <br> IT: Ricerca segnalazioni con filtri opzionali"
      operationId: searchReportedUsers
      security: [ { Bearer: [ ] } ]
      parameters:
        - name: merchantId
          in: query
          required: false
          description: Merchant ID
          schema: { type: string, maxLength: 64, pattern: '^[A-Z0-9\-_]+$' }
          example: MERCHANT_12345
        - name: initiativeId
          in: query
          required: false
          description: Initiative ID
          schema: { type: string, maxLength: 64, pattern: '^[A-Z0-9\-_]+$' }
          example: INITIATIVE_67890
        - name: userFiscalCode
          in: query
          required: false
          description: Citizen fiscal code
          schema: { type: string, maxLength: 16, pattern: '^[A-Z0-9]{11,16}$' }
          example: RSSMRA85T10A562S
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: array
                maxItems: 1000
                items:
                  $ref: '#/components/schemas/ReportedUserDTO'
              examples:
                list:
                  value:
                    - fiscalCode: "RSSMRA85T10A562S"
                      reportedDate: "2025-10-30T09:15:12Z"
                      transactionId: "TRX_001"
                      transactionDate: "2025-10-30T09:14:50Z"
                    - fiscalCode: "VRDLGI90A01H501Z"
                      reportedDate: "2025-10-29T16:02:45Z"
                      transactionId: "TRX_002"
                      transactionDate: "2025-10-29T15:59:10Z"
          headers:
            Access-Control-Allow-Origin: { $ref: '#/components/headers/Access-Control-Allow-Origin' }
            X-RateLimit-Limit: { $ref: '#/components/headers/X-RateLimit-Limit' }
            X-RateLimit-Remaining: { $ref: '#/components/headers/X-RateLimit-Remaining' }
            X-RateLimit-Reset: { $ref: '#/components/headers/X-RateLimit-Reset' }
        '400':
          description: Bad request
          content:
            application/json:
              schema: { $ref: '#/components/schemas/MerchantErrorDTO' }
              example: { code: MERCHANT_INVALID_REQUEST, message: "Invalid request" }
          headers:
            Access-Control-Allow-Origin: { $ref: '#/components/headers/Access-Control-Allow-Origin' }
            X-RateLimit-Limit: { $ref: '#/components/headers/X-RateLimit-Limit' }
            X-RateLimit-Remaining: { $ref: '#/components/headers/X-RateLimit-Remaining' }
            X-RateLimit-Reset: { $ref: '#/components/headers/X-RateLimit-Reset' }
        '401':
          description: Authentication failed
          content:
            application/json:
              schema: { $ref: '#/components/schemas/MerchantErrorDTO' }
          headers:
            Access-Control-Allow-Origin: { $ref: '#/components/headers/Access-Control-Allow-Origin' }
            X-RateLimit-Limit: { $ref: '#/components/headers/X-RateLimit-Limit' }
            X-RateLimit-Remaining: { $ref: '#/components/headers/X-RateLimit-Remaining' }
            X-RateLimit-Reset: { $ref: '#/components/headers/X-RateLimit-Reset' }
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema: { $ref: '#/components/schemas/MerchantErrorDTO' }
              example: { code: MERCHANT_TOO_MANY_REQUESTS, message: "Too many requests" }
          headers:
            Access-Control-Allow-Origin: { $ref: '#/components/headers/Access-Control-Allow-Origin' }
            Retry-After: { $ref: '#/components/headers/Retry-After' }
        '500':
          description: Server error
          content:
            application/json:
              schema: { $ref: '#/components/schemas/MerchantErrorDTO' }
          headers:
            Access-Control-Allow-Origin: { $ref: '#/components/headers/Access-Control-Allow-Origin' }

  /reported-user/{userFiscalCode}:
    delete:
      tags: [ reported-user ]
      summary: Delete reported user
      description: "ENG: Remove a report for the given fiscal code <br> IT: Rimuove la segnalazione per il codice fiscale indicato"
      operationId: deleteReportedUser
      security: [ { Bearer: [ ] } ]
      parameters:
        - name: userFiscalCode
          in: path
          required: true
          description: Citizen fiscal code of the reported user
          schema: { type: string, maxLength: 16, pattern: '^[A-Z0-9]{11,16}$' }
          example: RSSMRA85T10A562S
      responses:
        '200':
          description: Business outcome
          content:
            application/json:
              schema: { $ref: '#/components/schemas/ReportedUserCreateResponseDTO' }
              examples:
                ok: { value: { status: "OK", errorKey: "" } }
                notFound: { value: { status: "KO", errorKey: "UserId not found" } }
                entityNotFound: { value: { status: "KO", errorKey: "Entity not found" } }
                serviceUnavailable: { value: { status: "KO", errorKey: "Service unavailable" } }
                differentMerchant: { value: { status: "KO", errorKey: "Different Merchant Id" } }
                differentInitiative: { value: { status: "KO", errorKey: "Different Initiative Id" } }
          headers:
            Access-Control-Allow-Origin: { $ref: '#/components/headers/Access-Control-Allow-Origin' }
            X-RateLimit-Limit: { $ref: '#/components/headers/X-RateLimit-Limit' }
            X-RateLimit-Remaining: { $ref: '#/components/headers/X-RateLimit-Remaining' }
            X-RateLimit-Reset: { $ref: '#/components/headers/X-RateLimit-Reset' }
        '400':
          description: Bad request
          content:
            application/json:
              schema: { $ref: '#/components/schemas/MerchantErrorDTO' }
              example: { code: MERCHANT_INVALID_REQUEST, message: "Invalid request" }
          headers:
            Access-Control-Allow-Origin: { $ref: '#/components/headers/Access-Control-Allow-Origin' }
            X-RateLimit-Limit: { $ref: '#/components/headers/X-RateLimit-Limit' }
            X-RateLimit-Remaining: { $ref: '#/components/headers/X-RateLimit-Remaining' }
            X-RateLimit-Reset: { $ref: '#/components/headers/X-RateLimit-Reset' }
        '401':
          description: Authentication failed
          content:
            application/json:
              schema: { $ref: '#/components/schemas/MerchantErrorDTO' }
          headers:
            Access-Control-Allow-Origin: { $ref: '#/components/headers/Access-Control-Allow-Origin' }
            X-RateLimit-Limit: { $ref: '#/components/headers/X-RateLimit-Limit' }
            X-RateLimit-Remaining: { $ref: '#/components/headers/X-RateLimit-Remaining' }
            X-RateLimit-Reset: { $ref: '#/components/headers/X-RateLimit-Reset' }
        '403':
          description: Not authorized
          content:
            application/json:
              schema: { $ref: '#/components/schemas/MerchantErrorDTO' }
          headers:
            Access-Control-Allow-Origin: { $ref: '#/components/headers/Access-Control-Allow-Origin' }
            X-RateLimit-Limit: { $ref: '#/components/headers/X-RateLimit-Limit' }
            X-RateLimit-Remaining: { $ref: '#/components/headers/X-RateLimit-Remaining' }
            X-RateLimit-Reset: { $ref: '#/components/headers/X-RateLimit-Reset' }
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema: { $ref: '#/components/schemas/MerchantErrorDTO' }
              example: { code: MERCHANT_TOO_MANY_REQUESTS, message: "Too many requests" }
          headers:
            Access-Control-Allow-Origin: { $ref: '#/components/headers/Access-Control-Allow-Origin' }
            Retry-After: { $ref: '#/components/headers/Retry-After' }
        '500':
          description: Server error
          content:
            application/json:
              schema: { $ref: '#/components/schemas/MerchantErrorDTO' }
          headers:
            Access-Control-Allow-Origin: { $ref: '#/components/headers/Access-Control-Allow-Origin' }

components:
  headers:
    Access-Control-Allow-Origin:
      description: Indicates whether the response can be shared with the given origin
      schema:
        type: string
        maxLength: 255
        pattern: '.*'
        example: "*"
    Retry-After:
      description: Seconds to wait before retrying (rate limiting/backoff)
      schema:
        type: integer
        format: int32
        minimum: 0
        maximum: 86400
        example: 120
    X-RateLimit-Limit:
      description: The number of allowed requests in the current period
      schema:
        type: integer
        format: int32
        minimum: 0
        maximum: 2147483647
    X-RateLimit-Remaining:
      description: The number of remaining requests in the current period
      schema:
        type: integer
        format: int32
        minimum: 0
        maximum: 2147483647
    X-RateLimit-Reset:
      description: Seconds until the rate limit resets
      schema:
        type: integer
        format: int32
        minimum: 0
        maximum: 2147483647

  schemas:
    InitiativeDTO:
      type: object
      properties:
        initiativeId:
          type: string
          maxLength: 64
          pattern: '.*'
        initiativeName:
          type: string
          maxLength: 255
          pattern: '.*'
        organizationName:
          type: string
          maxLength: 255
          pattern: '.*'
        status:
          type: string
          enum: [ PUBLISHED, APPROVED, IN_REVISION, TO_CHECK, SUSPENDED, DRAFT, CLOSED ]
        startDate:
          type: string
          format: date
          maxLength: 10
          pattern: '^\d{4}-\d{2}-\d{2}$'
        endDate:
          type: string
          format: date
          maxLength: 10
          pattern: '^\d{4}-\d{2}-\d{2}$'
        serviceId:
          type: string
          maxLength: 64
          pattern: '.*'
        enabled:
          type: boolean
    MerchantStatisticsDTO:
      type: object
      properties:
        amountCents: { type: integer, format: int64, example: 100 }
        accruedCents: { type: integer, format: int64, example: 100 }
        refundedCents: { type: integer, format: int64, example: 100 }
    MerchantTransactionsListDTO:
      type: object
      required: [content, pageNo, pageSize, totalElements, totalPages]
      properties:
        content:
          type: array
          items: { $ref: "#/components/schemas/MerchantTransactionDTO" }
        pageNo: { type: integer, format: int32 }
        pageSize: { type: integer, format: int32 }
        totalElements: { type: integer, format: int32 }
        totalPages: { type: integer, format: int32 }
    MerchantTransactionDTO:
      type: object
      required: [trxCode, trxId, effectiveAmountCents, trxExpirationSeconds, status]
      properties:
        trxCode: { type: string, description: "ENG: Transaction code - IT: Il codice della transazione" }
        trxId: { type: string, description: "ENG: Transaction ID - IT: L'ID della transazione" }
        fiscalCode: { type: string, description: "ENG: Citizen fiscal code - IT: Codice fiscale del cittadino" }
        effectiveAmountCents: { type: integer, format: int64, description: "ENG: Transaction amount - IT: Quantitativo della transazione", example: 100 }
        rewardAmountCents: { type: integer, format: int64, description: "ENG: Reward amount - IT: Premio generato", example: 100 }
        trxDate: { type: string, format: date-time, description: "ENG: The date of the transaction - IT: La data della transazione" }
        trxExpirationSeconds: { type: number, description: "ENG: Expiration time of the transaction, in seconds - IT: Scadenza della transazione, in secondi" }
        updateDate: { type: string, format: date-time, description: "ENG: The date of the transaction update - IT: La data di aggiornamento della transazione" }
        status:
          type: string
          enum: [CREATED, IDENTIFIED, AUTHORIZATION_REQUESTED, AUTHORIZED, REJECTED]
          description: "ENG: Status of the transaction - IT: Stato della transazione"
        splitPayment: { type: boolean, description: "ENG: TRUE... - IT: TRUE..." }
        residualAmountCents: { type: integer, format: int64, description: "ENG: Remaining amount... - IT: Importo restante..." }
        channel: { type: string, description: "ENG: Channel... - IT: Canale..." }
        qrcodePngUrl: { type: string, description: "ENG: Url to the QR code image - IT: Url all'immagine del QR code" }
        qrcodeTxtUrl: { type: string, description: "ENG: Url of the QR code link - IT: Url del QR code" }
        additionalProperties:
          type: object
          additionalProperties: { type: string }
          description: "ENG: Additional properties... - IT: Proprietà aggiuntive..."
    MerchantTransactionsProcessedListDTO:
      type: object
      required: [content, pageNo, pageSize, totalElements, totalPages]
      properties:
        content:
          type: array
          items: { $ref: "#/components/schemas/MerchantTransactionProcessedDTO" }
        pageNo: { type: integer, format: int32 }
        pageSize: { type: integer, format: int32 }
        totalElements: { type: integer, format: int32 }
        totalPages: { type: integer, format: int32 }
    MerchantTransactionProcessedDTO:
      type: object
      required: [trxId, effectiveAmountCents, status]
      properties:
        trxId: { type: string, description: "ENG: Transaction ID - IT: L'ID della transazione" }
        fiscalCode: { type: string, description: "ENG: Citizen fiscal code - IT: Codice fiscale del cittadino" }
        effectiveAmountCents: { type: integer, format: int64, description: "ENG: Transaction amount - IT: Quantitativo della transazione", example: 100 }
        rewardAmountCents: { type: integer, format: int64, description: "ENG: Reward amount - IT: Premio generato", example: 100 }
        trxDate: { type: string, format: date-time, description: "ENG: The date of the transaction - IT: La data della transazione" }
        updateDate: { type: string, format: date-time, description: "ENG: The date of the transaction update - IT: La data di aggiornamento della transazione" }
        status:
          type: string
          enum: [REWARDED, CANCELLED]
          description: "ENG: Status of the transaction - IT: Stato della transazione"
        channel: { type: string, description: "ENG: Channel... - IT: Canale..." }
    MerchantDetailDTO:
      type: object
      properties:
        initiativeId: { type: string, description: "ENG: The ID of the initiative <br> IT: L'ID' dell'iniziativa" }
        initiativeName: { type: string, description: "ENG: The name of the initiative <br> IT: Il nome dell'iniziativa" }
        businessName: { type: string, description: "ENG: The name of the merchant <br> IT: La ragione sociale dell'esercente" }
        legalOfficeAddress: { type: string, description: "ENG: The address of the legal office <br> IT: L'indirizzo della sede legale" }
        legalOfficeMunicipality: { type: string, description: "ENG: The municipality... <br> IT: Il comune..." }
        legalOfficeProvince: { type: string, description: "ENG: The province... <br> IT: La provincia..." }
        legalOfficeZipCode: { type: string, description: "ENG: The zipcode... <br> IT: Il CAP..." }
        certifiedEmail: { type: string, description: "ENG: The certified email... <br> IT: L'indirizzo email PEC..." }
        fiscalCode: { type: string, description: "ENG: The fiscal code/vat number... <br> IT: Il codice fiscale/partita iva..." }
        vatNumber: { type: string, description: "ENG: The vat number... <br> IT: La partita iva..." }
        status:
          type: string
          enum: [UPLOADED]
          description: "ENG: One of the possible merchant onboarding status... IT: ..."
        iban: { type: string, description: "ENG: The iban... <br> IT: L'iban..." }
        ibanHolder: { type: string, description: "ENG: The holder of the IBAN... <br> IT: ..." }
        creationDate: { type: string, format: date-time, description: "ENG: Time and date... <br> IT: ..." }
        updateDate: { type: string, format: date-time, description: "ENG: Time and date... <br> IT: ..." }
        activationDate: { type: string, format: date-time, description: "ENG: Time and date... <br> IT: ..." }
    TransactionCreationRequest:
      type: object
      required: [initiativeId, amountCents, idTrxAcquirer]
      properties:
        initiativeId: { type: string }
        amountCents: { type: integer, format: int64 }
        mcc: { type: string }
        idTrxAcquirer: { type: string }
        additionalProperties:
          type: object
          additionalProperties: { type: string }
    TransactionResponse:
      type: object
      required: [id, trxCode, initiativeId, merchantId, idTrxAcquirer, trxDate, trxExpirationSeconds, amountCents, amountCurrency, acquirerId, status, qrcodePngUrl, qrcodeTxtUrl]
      properties:
        id: { type: string }
        trxCode: { type: string }
        initiativeId: { type: string }
        merchantId: { type: string }
        idTrxAcquirer: { type: string }
        trxDate: { type: string, format: date-time }
        trxExpirationSeconds: { type: number }
        amountCents: { type: integer, format: int64 }
        amountCurrency: { type: string }
        mcc: { type: string }
        acquirerId: { type: string }
        status:
          type: string
          enum: [CREATED, IDENTIFIED, AUTHORIZED, REWARDED, REJECTED]
        merchantFiscalCode: { type: string }
        vat: { type: string }
        splitPayment: { type: boolean }
        residualAmountCents: { type: integer, format: int64 }
        qrcodePngUrl: { type: string }
        qrcodeTxtUrl: { type: string }
        additionalProperties:
          type: object
          additionalProperties: { type: string }
    AuthPaymentResponseDTO:
      type: object
      required: [id, trxCode, initiativeId, status, amountCents]
      properties:
        id: { type: string, description: "ENG: Id of the payment - IT: Identificativo del pagamento" }
        trxCode: { type: string, description: "ENG: Transaction code - IT: Codice della transazione" }
        trxDate: { type: string, format: date-time, description: "ENG: Transaction date - IT: Data della transazione" }
        initiativeId: { type: string, description: "ENG: Id of the initiative - IT: Identificativo dell'iniziativa" }
        initiativeName: { type: string, description: "ENG: Name of the initiative - IT: Nome della iniziativa" }
        businessName: { type: string, description: "ENG: Business name - IT: Nome dell'esercente" }
        status:
          type: string
          enum: [CREATED, IDENTIFIED, AUTHORIZATION_REQUESTED, AUTHORIZED]
          description: "ENG: Status of the payment ... IT: ..."
        rewardCents: { type: integer, format: int64, description: "ENG: Reward - IT: Premio generato" }
        amountCents: { type: integer, format: int64, description: "ENG: Amount cents - IT: Importo in centessimi" }
        residualBudgetCents: { type: integer, format: int64, description: "ENG: Residual budget - IT: Budget residuo" }
        splitPayment: { type: boolean, description: "ENG: TRUE... - IT: TRUE..." }
        residualAmountCents: { type: integer, format: int64, description: "ENG: Remaining amount... - IT: ..." }
    TransactionErrorDTO:
      type: object
      required: [code, message]
      properties:
        code:
          type: string
          enum:
            - PAYMENT_NOT_FOUND_EXPIRED
            - PAYMENT_NOT_FOUND_OR_EXPIRED
            - PAYMENT_TRANSACTION_EXPIRED
            - PAYMENT_INITIATIVE_NOT_FOUND
            - PAYMENT_INITIATIVE_INVALID_DATE
            - PAYMENT_INITIATIVE_NOT_DISCOUNT
            - PAYMENT_ALREADY_AUTHORIZED
            - PAYMENT_ALREADY_CANCELLED
            - PAYMENT_BUDGET_EXHAUSTED
            - PAYMENT_GENERIC_REJECTED
            - PAYMENT_TOO_MANY_REQUESTS
            - PAYMENT_GENERIC_ERROR
            - PAYMENT_USER_SUSPENDED
            - PAYMENT_USER_NOT_ONBOARDED
            - PAYMENT_USER_UNSUBSCRIBED
            - PAYMENT_ALREADY_ASSIGNED
            - PAYMENT_NOT_ALLOWED_FOR_TRX_STATUS
            - PAYMENT_NOT_ALLOWED_MISMATCHED_MERCHANT
            - PAYMENT_USER_NOT_ASSOCIATED
            - PAYMENT_DELETE_NOT_ALLOWED_FOR_TRX_STATUS
            - PAYMENT_UNRELATE_NOT_ALLOWED_FOR_TRX_STATUS
            - PAYMENT_AMOUNT_NOT_VALID
            - PAYMENT_MERCHANT_NOT_ONBOARDED
            - PAYMENT_INVALID_REQUEST
            - PAYMENT_STATUS_NOT_VALID
            - PAYMENT_TRANSACTION_VERSION_PENDING
        message:
          type: string
          description: "ENG: Error message- IT: Messaggio di errore"
    AuthBarCodePaymentDTO:
      type: object
      required: [amountCents, idTrxAcquirer]
      properties:
        amountCents: { type: integer, format: int64, description: "ENG: Amount of transaction - IT: Importo della transazione" }
        idTrxAcquirer: { type: string, description: "ENG: Transaction acquirer ID- IT: Identificativo..." }
        additionalProperties:
          type: object
          additionalProperties: { type: string }
    StatisticsErrorDTO:
      type: object
      required: [code, message]
      properties:
        code:
          type: string
          enum: [STATISTICS_NOT_FOUND, STATISTICS_INVALID_REQUEST, STATISTICS_TOO_MANY_REQUESTS, STATISTICS_GENERIC_ERROR, STATISTICS_MANAGER_TOO_MANY_REQUESTS, STATISTICS_MANAGER_GENERIC_ERROR]
        message: { type: string, description: "ENG: Error message - IT: Messaggio di errore" }
    MerchantErrorDTO:
      type: object
      required: [code, message]
      properties:
        code:
          type: string
          enum: [MERCHANT_NOT_FOUND, MERCHANT_NOT_ONBOARDED, MERCHANT_TOO_MANY_REQUESTS, MERCHANT_INVALID_REQUEST, MERCHANT_GENERIC_ERROR]
        message: { type: string, description: "ENG: Error message- IT: Messaggio di errore" }
    PointOfSaleDTO:
      type: object
      properties:
        id: { type: string, description: "ENG: The id... <br> IT: Id..." }
        type: { type: string, enum: [PHYSICAL, ONLINE], description: "ENG: The type... <br> IT: ..." }
        franchiseName: { type: string, description: "ENG: The name... <br> IT: ..." }
        region: { type: string, description: "ENG: The region... <br> IT: ..." }
        province: { type: string, description: "ENG: The province... <br> IT: ..." }
        city: { type: string, description: "ENG: The city... <br> IT: ..." }
        zipCode: { type: string, description: "ENG: The zip code... <br> IT: ..." }
        address: { type: string, description: "ENG: The address... <br> IT: ..." }
        streetNumber: { type: string, description: "ENG: The street number... <br> IT: ..." }
        website: { type: string, description: "ENG: The website... <br> IT: ..." }
        contactEmail: { type: string, description: "ENG: The email... <br> IT: ..." }
        contactName: { type: string, description: "ENG: The name... <br> IT: ..." }
        contactSurname: { type: string, description: "ENG: The surname... <br> IT: ..." }
        channelEmail: { type: string, description: "ENG: Store contact via email... <br> IT: ..." }
        channelPhone: { type: string, description: "ENG: Store contact via phone... <br> IT: ..." }
        channelGeolink: { type: string, description: "ENG: Store contact providing a map link... <br> IT: ..." }
        channelWebsite: { type: string, description: "ENG: Store contact via a web-based portal... <br> IT: ..." }
    ListPointOfSaleDTO:
      type: object
      properties:
        content:
          type: array
          items: { $ref: "#/components/schemas/PointOfSaleDTO" }
        pageNumber: { type: integer, format: int32, description: "ENG: The number of the page <br> IT: ..." }
        pageSize: { type: integer, format: int32, description: "ENG: The element size for page <br> IT: ..." }
        totalElements: { type: integer, format: int32, description: "ENG: The total number... <br> IT: ..." }
        totalPages: { type: integer, format: int32, description: "ENG: The total number of the pages <br> IT: ..." }
    PointOfSaleErrorDTO:
      type: object
      required: [code, message]
      properties:
        code:
          type: string
          enum: [POINT_OF_SALE_NOT_FOUND, POINT_OF_SALE_BAD_REQUEST, POINT_OF_SALE_INVALID_REQUEST, MERCHANT_NOT_ONBOARDED, POINT_OF_SALE_TOO_MANY_REQUESTS, POINT_OF_SALE_GENERIC_ERROR]
        message: { type: string, description: "ENG: Error message- IT: Messaggio di errore" }
    ValidationErrorDTO:
      type: object
      required: [code, message, errors]
      properties:
        code: { type: string, enum: [VALIDATION_ERROR] }
        message: { type: string, description: Some fields are invalid. See details for more information }
        errors:
          type: array
          items: { $ref: "#/components/schemas/ValidationErrorDetail" }
    ValidationErrorDetail:
      type: object
      required: [index, field, value, code, message]
      properties:
        index: { type: integer, description: The index of the value }
        field: { type: string, description: Name of the field where the validation error occurred }
        value: { type: string, description: The value that was provided but rejected due to validation failure }
        code: { type: string, description: "Specific validation error code (e.g., NotNull)" }
        message: { type: string, description: Description of the validation error }
    MerchantIbanPatchDTO:
      type: object
      properties:
        iban: { type: string, description: "ENG: The IBAN... <br> IT: ..." }
        ibanHolder: { type: string, description: "ENG: The holder of the IBAN... <br> IT: ..." }
    PointOfSaleTransactionsProcessedListDTO:
      type: object
      properties:
        content:
          type: array
          items: { $ref: '#/components/schemas/PointOfSaleTransactionProcessedDTO' }
          maxItems: 1000
        pageNo: { type: integer, format: int32, description: 'ENG: The number of the page <br> IT: Il numero della pagina', minimum: 0, maximum: 1000000 }
        pageSize: { type: integer, format: int32, description: 'ENG: The element size for page <br> IT: Il numero di elementi per pagina', minimum: 0, maximum: 1000000 }
        totalElements: { type: integer, format: int32, description: 'ENG: The total number of the elements <br> IT: ...', minimum: 0, maximum: 1000000 }
        totalPages: { type: integer, format: int32, description: 'ENG: The total number of the pages <br> IT: ...', minimum: 0, maximum: 1000000 }
    PointOfSaleTransactionProcessedDTO:
      type: object
      properties:
        id: { type: string, description: 'ENG: Transaction ID <br> IT: ID della transazione', maxLength: 64, pattern: '.*' }
        fiscalCode: { type: string, description: 'ENG: Citizen fiscal code - IT: Codice fiscale del cittadino', maxLength: 16, pattern: '.*' }
        effectiveAmountCents: { type: integer, format: int64, description: 'ENG: Transaction amount in cents - IT: ...', minimum: -1000000000, maximum: 1000000000 }
        rewardAmountCents: { type: integer, format: int64, description: 'ENG: Reward amount in cents - IT: ...', minimum: -1000000000, maximum: 1000000000 }
        authorizedAmountCents: { type: integer, format: int64, description: "ENG: Authorized amount in cents - IT: ...", minimum: 0, maximum: 1000000000 }
        trxDate: { type: string, format: date-time, description: 'ENG: The date of the transaction - IT: ...', maxLength: 255 }
        updateDate: { type: string, format: date-time, description: 'ENG: The date of the transaction update - IT: ...', maxLength: 255 }
        status:
          type: string
          description: 'ENG: The status of the transaction - IT: ...'
          enum: [REWARDED, CANCELLED, REFUNDED]
        channel: { type: string, description: 'ENG: Channel from which the transaction takes place - IT: ...', maxLength: 24 }
        additionalProperties:
          type: object
          additionalProperties: { type: string }
        invoiceFile:
          $ref: '#/components/schemas/InvoiceFileDTO'
    InvoiceFileDTO:
      type: object
      properties:
        filename: { type: string, description: 'ENG: The name of the invoice file <br> IT: ...' }
    DownloadInvoiceResponseDTO:
      type: object
      properties:
        invoiceUrl: { type: string, description: "ENG: URL to download the invoice file - IT: ..." }
      required: [invoiceUrl]
    ReportedUserRequestDTO:
      type: object
      required: [merchantId, initiativeId, userFiscalCode]
      properties:
        merchantId:
          type: string
          maxLength: 64
          pattern: '^[A-Z0-9\-_]+$'
          description: Merchant ID
          example: MERCHANT_12345
        initiativeId:
          type: string
          maxLength: 64
          pattern: '^[A-Z0-9\-_]+$'
          description: Initiative ID
          example: INITIATIVE_67890
        userFiscalCode:
          type: string
          maxLength: 16
          pattern: '^[A-Z0-9]{11,16}$'
          description: Citizen fiscal code
          example: RSSMRA85T10A562S
    ReportedUserCreateResponseDTO:
      type: object
      required: [status, errorKey]
      properties:
        status:
          type: string
          description: Outcome of the operation
          enum: [OK, KO]
          example: OK
        errorKey:
          type: string
          nullable: true
          description: >
            Error reason if status == KO; empty string otherwise.
            Possible business messages:
             - "UserId not found"
             - "Entity not found"
             - "Service unavailable"
             - "Different Merchant Id"
             - "Already reported"
             - "Different Initiative Id"
          enum: ["", "UserId not found", "Entity not found", "Service unavailable", "Different Merchant Id", "Already reported", "Different Initiative Id"]
          maxLength: 64
          example: ""
    ReportedUserDTO:
      type: object
      required: [fiscalCode, reportedDate]
      properties:
        fiscalCode: { type: string, maxLength: 16, pattern: '^[A-Z0-9]{11,16}$', description: Citizen fiscal code, example: RSSMRA85T10A562S }
        reportedDate: { type: string, format: date-time, maxLength: 64, description: When the user was reported, example: 2025-10-30T09:15:12Z }
        transactionId: { type: string, nullable: true, maxLength: 64, description: Related transaction ID (if any), example: TRX_001 }
        transactionDate: { type: string, format: date-time, nullable: true, maxLength: 64, description: Related transaction date (if any), example: 2025-10-30T09:14:50Z }
  securitySchemes:
    Bearer:
      type: apiKey
      name: Authorization
      in: header

security:
  - Bearer: []
